{"version":3,"sources":["src/environment.js","src/main.js","src/messages.js","src/utility.js","src/app/header.js","src/app/no-selection.js","src/app/view.js","src/contacts/model.js","src/contacts/service.js","src/contacts/view-list.js","src/contacts/view.js","src/resources/index.js","src/resources/elements/loading-indicator.js","src/app.js"],"names":["debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ContactUpdated","contact","ContactViewed","areEqual","obj1","obj2","Object","keys","every","key","hasOwnProperty","Header","NoSelection","message","App","configureRouter","config","router","map","route","moduleId","title","name","Contact","data","first","last","email","phone","id","_id","toData","ContactService","httpClient","http","x","withBaseUrl","withHeader","getAllContacts","get","response","content","contacts","getContact","addContact","post","obj","updateContact","patch","deleteContact","delete","ContactList","service","eq","subscribe","select","msg","found","find","assign","created","selectedId","ContactDetail","ea","activate","params","routeConfig","navModel","setTitle","originalContact","JSON","parse","stringify","publish","save","saveContact","canDeactivate","result","confirm","isRequesting","globalResources","nprogress","LoadingIndicator","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\n  constructor(contact) {\n    this.contact = contact;\n  }\n}\n\nexport class ContactViewed {\n  constructor(contact) {\n    this.contact = contact;\n  }\n}\n","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","import { bindable } from 'aurelia-framework';\n\nexport class Header {\n  @bindable title;\n}\n","export class NoSelection {\n  constructor() {\n    this.message = \"Please Select a Contact.\";\n  }\n}\n","export class App {\n  configureRouter(config, router) {\n    config.map([\n      { route: '', moduleId: './app/no-selection', title: 'Select'},\n      { route: 'contacts/:id', moduleId: './contacts/view', name: 'contacts' }\n    ]);\n\n    this.router = router;\n  }\n}\n","export class Contact {\n  id;\n  first = '';\n  last = '';\n  email = '';\n  phone = '';\n\n  constructor(data) {\n    this.id = data._id;\n    this.first = data.first;\n    this.last = data.last;\n    this.email = data.email;\n    this.phone = data.phone;\n  }\n\n  toData() {\n    return {\n      first: this.first,\n      last: this.last,\n      email: this.email,\n      phone: this.phone\n    };\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport {Contact} from './model';\n\n@inject(HttpClient)\nexport class ContactService {\n  constructor(httpClient) {\n    this.http = httpClient\n      .configure(x => {\n        x.withBaseUrl('/api/contacts');\n        x.withHeader('Content-Type', 'application/json');\n      });\n  }\n\n  getAllContacts() {\n    return this.http.get('')\n      .then(response => {\n        return response.content.contacts.map(x => { return new Contact(x) })\n      });\n  }\n\n  getContact(id) {\n    return this.http.get(id)\n      .then(response => {\n        return new Contact(response.content);\n      });\n  }\n\n  addContact(contact) {\n    return this.http.post('', contact.toData())\n      .then(response => {\n        return new Contact(response.content.obj);\n    });\n  }\n\n  updateContact(contact) {\n    return this.http.patch(contact.id, contact.toData())\n      .then(response => {\n      return new Contact(response.content.obj);\n    });\n  }\n\n  deleteContact(contact) {\n    return this.http.delete(contact.id)\n      .then(response => {\n        //\n      });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ContactService} from './service';\nimport {ContactUpdated, ContactViewed} from '../messages';\n\n@inject(ContactService, EventAggregator)\nexport class ContactList {\n  constructor(service, eq) {\n    this.service = service;\n    this.contacts = [];\n\n    eq.subscribe(ContactViewed, msg => this.select(msg.contact));\n    eq.subscribe(ContactUpdated, msg => {\n      let id = msg.contact.id;\n      let found = this.contacts.find(x => x.id === id);\n      Object.assign(found, msg.contact);\n    });\n  }\n\n  created() {\n    this.service.getAllContacts().then(contacts => this.contacts = contacts);\n  }\n\n  select(contact) {\n    this.selectedId = contact.id;\n    return true;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {areEqual} from '../utility';\nimport {ContactService} from './service';\nimport {ContactUpdated, ContactViewed} from '../messages';\n\n@inject(ContactService, EventAggregator)\nexport class ContactDetail {\n  constructor(service, ea) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  activate(params, routeConfig) {\n    this.routeConfig = routeConfig;\n\n    return this.service.getContact(params.id).then(contact => {\n      this.contact = contact;\n      this.routeConfig.navModel.setTitle(contact.first);\n      this.originalContact = JSON.parse(JSON.stringify(contact));\n      this.ea.publish(new ContactViewed(this.originalContact));\n    });\n  }\n\n  get canSave() {\n    return this.contact.first && this.contact.last && !this.service.http.isRequesting;\n  }\n\n  save() {\n    this.service.saveContact(this.contact).then(contact => {\n      this.contact = contact;\n      this.routeConfig.navModel.setTitle(contact.first);\n      this.originalContact = JSON.parse(JSON.stringify(contact));\n      this.ea.publish(new ContactUpdated(this.contact));\n    });\n  }\n\n  canDeactivate() {\n    if (!areEqual(this.originalContact, this.contact)) {\n      let result = confirm('You have unsaved changes.  Are you sure you wish to leave?');\n\n      if(!result) {\n        this.ea.publish(new ContactViewed(this.contact));\n      }\n\n      return result;\n    }\n\n    return true;\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\nimport {bindable, noView} from 'aurelia-framework';\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n  @bindable loading = false;\n\n  loadingChanged(newValue) {\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n}\n","export class App {\n  configureRouter(config, router) {\n    config.map([\n      { route: '', moduleId: './app/no-selection', title: 'Select'},\n      { route: 'contacts/:id', moduleId: './contacts/view', name: 'contacts' }\n    ]);\n\n    this.router = router;\n  }\n}\n\n"],"sourceRoot":".."}